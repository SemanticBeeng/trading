try(na.omit(getSymbols(
symbol,
from = day,
to = day,
src = "FI",
env = NULL,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE))
)
)
result[0]
result
unclass(result)
tmpenv
tmpenv$ORAN_PA
result <- lapply(seq(from, to, "days"),
function(day)
try(na.omit(getSymbols(
symbol,
from = day,
to = day,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE))
)
)
tmpenv$ORAN_PA
result
tmpenv <- new.env()
require(quantmod)
require(FinancialInstrument)
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-19')
to <- from + 10 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- lapply(seq(from, to, "days"),
function(day)
try(na.omit(getSymbols(
symbol,
from = day,
to = day,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE))
)
)
tmpenv$AIRP.PA
symbol
result <- lapply(seq(from, to, "days"),
function(day)
try(getSymbols(
symbol,
from = day,
to = day,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE)
)
)
tmpenv$AIRP.PA
View(tmpenv$AIRP.PA)
head(tmpenv$AIRP.PA)
?getSymbols.FI
AIRP.PA
result <- lapply(seq(from, to, "days"),
function(day)
try(getSymbols(
symbol,
from = day,
to = day,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE)
)
)
require(quantmod)
require(FinancialInstrument)
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-19')
to <- from + 10 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- lapply(seq(from, to, "days"),
function(day)
try(getSymbols(
symbol,
from = day,
to = day,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE)
)
)
AIRP.PA
tmpenv$AIRP.PA
?tryCatch
result <- lapply(symbol,
function(symbol)
tryCatch(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE) ,
error = function(e) {
e
}
)
)
tmpenv$AIRP.PA
result
result[1]
result <- lapply(symbol,
function(symbol)
try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE)
#            , error = function(e) {
#              e
#              }
)
)
result
tmpenv$AIRP.PA
head(tmpenv$AIRP.PA)
result
tmpenv$AIRP.PA = NULL
tmpenv$AIRP.PA
result <- lapply(symbol,
function(symbol)
try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE)
#            , error = function(e) {
#              e
#              }
)
)
tmpenv$AIRP.PA
result
head(result)
head(result, 10)
symbol <- "AIRP.PA"
from <- as.Date('2000-04-19')
to <- from + 10 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
#            auto.assign = FALSE,
verbose = TRUE)
#            , error = function(e) {
#              e
#              }
)
result
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
#            auto.assign = FALSE,
verbose = TRUE)
, error = function(e) {
e
}
)
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
#            auto.assign = FALSE,
verbose = TRUE)
, error = function(e) {
cat("Error '", e, "' found!\n", sep = "")
}
)
result <- tryCatch(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
#            auto.assign = FALSE,
verbose = TRUE)
, error = function(e) {
cat("Error '", e, "' found!\n", sep = "")
}
)
result
require(quantmod)
require(FinancialInstrument)
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-19')
to <- from + 10 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- tryCatch(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE),
error = function(e) {
cat("Error '", e, "' found!\n", sep = "")
}
)
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- tryCatch(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE),
error = function(e) {
cat("Error '", e, "' found!\n", sep = "")
}
)
result
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from + 1 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- tryCatch(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE),
error = function(e) {
cat("Error '", e, "' found!\n", sep = "")
}
)
result
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from + 5 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- tryCatch(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE),
error = function(e) {
cat("Error '", e, "' found!\n", sep = "")
}
)
result
tmpenv$AIRP.PA
require(quantmod)
require(FinancialInstrument)
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from + 5 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- tryCatch(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE),
error = function(e) {
cat("Error '", e, "' found!\n", sep = "")
}
)
result <- tryCatch(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE),
error = function(e) {
cat("Error '", e, "' found!\n", sep = "")
}
)
result
tmpenv$AIRP.PA
result <- tryCatch(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE),
error = function(e) {
cat("Error '", e, "' found!\n", sep = "")
}
)
tmpenv$AIRP.PA
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE))
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from + 5 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE))
result
View(result)
require(quantmod)
require(FinancialInstrument)
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from + 5 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE))
tmpenv$AIRP.PA
result
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE))
tmpenv$AIRP.PA
result
result$AIRP.PA
result
result$AIRP.PA
tmpenv$AIRP.PA
indexClass(tmpenv$AIRP.PA)
indexClass(tmpenv$AIRP.PA) <- Date
indexClass(tmpenv$AIRP.PA)
round(index(tmpenv$AIRP.PA), "day")
unique(round(index(tmpenv$AIRP.PA), "day"))
head(index(tmpenv$AIRP.PA), "day"))
head(index(tmpenv$AIRP.PA), "day")
head(index(tmpenv$AIRP.PA))
daysSpan <- seq(from, to)
daysSpan <- seq(from = from, to = to, by = 'day')
daySpan
daysSpan
daysTraded
daysTraded <- unique(round(index(tmpenv$AIRP.PA), 'day'))
daysTraded
daysTraded[0]
daysTraded
merge(daysSpan, daysTraded)
daysTraded
daysSpan
?`indexTZ
?indexTZ
?indexTZ
tzone(daysSpan)
indexTZ(daysSpan)
require(quantmod)
require(FinancialInstrument)
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from + 5 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
# http://databasefaq.com/index.php/answer/235383/r-error-handling-xts-lapply-quantmod-have-lapply-continue-even-after-encountering-an-error-using-getsymbols-from-quantmod-duplicate
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE))
daysRange <- seq(from = from, to = to, by = 'day')
daysTraded <- unique(round(index(tmpenv$AIRP.PA), 'day'))
tzome(daysTraded)
tzone(daysTraded)
require(quantmod)
require(FinancialInstrument)
tzone(daysTraded)
indexTZ(daysTraded)
TZ="America/Chicago"
TZ="Europe/Amsterdam"
Sys.setenv(TZ)
Sys.setenv(TZ=TZ)
Sys.getenv(TZ)
Sys.getenv("TZ")
