src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE))
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from + 5 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE))
result
View(result)
require(quantmod)
require(FinancialInstrument)
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from + 5 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = FALSE,
verbose = TRUE))
tmpenv$AIRP.PA
result
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE))
tmpenv$AIRP.PA
result
result$AIRP.PA
result
result$AIRP.PA
tmpenv$AIRP.PA
indexClass(tmpenv$AIRP.PA)
indexClass(tmpenv$AIRP.PA) <- Date
indexClass(tmpenv$AIRP.PA)
round(index(tmpenv$AIRP.PA), "day")
unique(round(index(tmpenv$AIRP.PA), "day"))
head(index(tmpenv$AIRP.PA), "day"))
head(index(tmpenv$AIRP.PA), "day")
head(index(tmpenv$AIRP.PA))
daysSpan <- seq(from, to)
daysSpan <- seq(from = from, to = to, by = 'day')
daySpan
daysSpan
daysTraded
daysTraded <- unique(round(index(tmpenv$AIRP.PA), 'day'))
daysTraded
daysTraded[0]
daysTraded
merge(daysSpan, daysTraded)
daysTraded
daysSpan
?`indexTZ
?indexTZ
?indexTZ
tzone(daysSpan)
indexTZ(daysSpan)
require(quantmod)
require(FinancialInstrument)
tmpenv <- new.env()
symbol <- "AIRP.PA"
from <- as.Date('2000-04-21')
to <- from + 5 #364
storageDir <- file.path("/datascience/marketdata/storage")
#setSymbolLookup.FI(storage_method = "rda",
#                   base_dir = file.path("/datascience/marketdata/storage"))
# http://databasefaq.com/index.php/answer/235383/r-error-handling-xts-lapply-quantmod-have-lapply-continue-even-after-encountering-an-error-using-getsymbols-from-quantmod-duplicate
result <- try(getSymbols(
symbol,
from = from,
to = to,
src = "FI",
env = tmpenv,
dir = storageDir,
etension = "RData",
auto.assign = TRUE,
verbose = TRUE))
daysRange <- seq(from = from, to = to, by = 'day')
daysTraded <- unique(round(index(tmpenv$AIRP.PA), 'day'))
tzome(daysTraded)
tzone(daysTraded)
require(quantmod)
require(FinancialInstrument)
tzone(daysTraded)
indexTZ(daysTraded)
TZ="America/Chicago"
TZ="Europe/Amsterdam"
Sys.setenv(TZ)
Sys.setenv(TZ=TZ)
Sys.getenv(TZ)
Sys.getenv("TZ")
install.packages("tseries")
source('/datascience/projects/trading/misc/quantmod1.R')
printStats(symbol, TRUE)
source('/datascience/projects/trading/misc/quantmod1.R')
debugSource('/datascience/projects/trading/misc/quantmod1.R')
daysDiff
daysDiff %>%
transmute(date = as.POSIXct(daysDiff$date, tz='GMT', origin="1970-01-01")) %>%
mutate(wday = wday(date)) %>%
mutate(isHoliday = isHoliday(date)) %>%
filter(wday(date) != 7) %>%
filter(wday(date) != 1)
x1 <- as.POSIXct("2000-01-06", ts = "GMT")
isHoliday(x1)
isHoliday <- function (x) {
isIt <-
((month(x) == 1) && (day(x) == 1)) ||
((month(x) == 12) && (day(x) == 25 || day(x) == 26 || day(x) == 31)) ||
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) == 1)
print(isIt)
isIt
}
debugSource('/datascience/projects/trading/misc/quantmod1.R')
daysDiff %>%
transmute(date = as.POSIXct(daysDiff$date, tz='GMT', origin="1970-01-01")) %>%
mutate(wday = wday(date)) %>%
mutate(isHoliday = isHoliday(date)) %>%
filter(wday(date) != 7) %>%
filter(wday(date) != 1)
x1 <- as.POSIXct("2000-06-12", tz = "GMT")
isHoliday(x1)
isHoliday(x1)
x1
isHoliday(x1)
debugSource('/datascience/projects/trading/misc/quantmod1.R')
isIt
x
isIt
month(x)
month(x) == 1
((month(x) == 1) && (day(x) == 1))
day(x) == 1
x
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays))
)
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) == 1)
month(x)
day(x)
(month(x) == 1) && (day(x) == 1))
(month(x) == 1) && (day(x) == 1)
x
month(x)
day(x)
day(x) == 1
month(x) == 1
(month(x) == 1) && (day(x) == 1)
(month(x) == 1) & (day(x) == 1)
(month(x) ==  1) & (day(x) ==  1)) |
((month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31))
(month(x) ==  1) & (day(x) ==  1)
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31))
((month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31))
(month(x) ==  1) & (day(x) ==  1)) |
((month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)
(month(x) ==  1) & (day(x) ==  1)) |
((month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31))
((month(x) ==  1) & (day(x) ==  1)) |
((month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31))
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) == 1)
((month(x) ==  1) & (day(x) ==  1)) |
((month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)) |
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) == 1)
isHoliday <- function (x) {
isIt <-
((month(x) ==  1) & (day(x) ==  1)) |
((month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)) |
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) == 1)
print(isIt)
isIt
}
debugSource('/datascience/projects/trading/misc/quantmod1.R')
debugSource('/datascience/projects/trading/misc/quantmod1.R')
source('/datascience/projects/trading/misc/quantmod1.R')
debugSource('/datascience/projects/trading/misc/quantmod1.R')
isIt
debugSource('/datascience/projects/trading/misc/quantmod1.R')
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) == 1)
nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays))
data.frame(year = year(x), month = month(x), day = as.numeric(day(x))) %in% ChristmasDays
c(year = year(x), month = month(x), day = as.numeric(day(x)))
c(year = year(x), month = month(x), day = as.numeric(day(x))) %in% ChristmasDays
c(year = year(x), month = month(x), day = as.numeric(day(x)))
c(year = year(x), month = month(x), day = as.numeric(day(x))) %in% ChristmasDays
dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays))
dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31) |
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) > 0)
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) > 0)
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)
dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) > 0)
x
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)
(nrow(dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)) > 0)
dplyr::intersect(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)
c(year(x), month(x), as.numeric(day(x)))
c(y = year(x),m = month(x), d = as.numeric(day(x)))
ChristmasDays
(data.frame(year = year(x), month = month(x), day = as.numeric(day(x))), ChristmasDays)
data.frame(c(year = year(x), month = month(x), day = as.numeric(day(x))))
x
c(year = year(x), month = month(x), day = as.numeric(day(x)))
c(year(x), month(x), as.numeric(day(x)))
c(c(year(x)), c(month(x)), c(as.numeric(day(x))))
x
class(x)
uunlist(x)
unlist(x)
class(unlist(x))
lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x))))
unlist(lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x)))))
lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x))))
rbind(lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x)))))
apply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x))))
lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x))))
lapply(x, FUN = function(x) c(year(x), month(x), as.numeric(day(x))))
as.data.frame(lapply(x, FUN = function(x) c(year(x), month(x), as.numeric(day(x)))))
as.data.frame(lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x)))))
lapply(x, FUN = function(x) c(year(x), month(x), as.numeric(day(x))))
x
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)
lapply(x, FUN = function(x) c(year(x), month(x), as.numeric(day(x))))
lapply(x, FUN = function(x) r(year(x), month(x), as.numeric(day(x))))
lapply(x, FUN = function(x) c(year(x), month(x), as.numeric(day(x))))
lapply(x, FUN = function(x) c(year = year(x), month(x), as.numeric(day(x))))
lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x))))
class(lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x)))))
as.data.frame(lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x)))))
unlist(lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x)))))
lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x))))
lapply(x, FUN = function(x) c(year = year(x), month = month(x), day = as.numeric(day(x))))
df = data.frame(year = NULL, month = NULL, day=NULL)
df
df
lapply(x, FUN = function(x) rbind(df, c(year = year(x), month = month(x), day = as.numeric(day(x))))
)
df
lapply(x, FUN = function(x) rbind(df, c(year = year(x), month = month(x), day = as.numeric(day(x))))
)
require("Lahman")
debugSource('/datascience/projects/trading/misc/quantmod1.R')
x %>% mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
x %>% mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
x
as.data.frame(x) %>% mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x))) %>%
select(-x)
dplyr::intersect(x, ChristmasDays)
x
x <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x))) %>%
select(-x)
dplyr::intersect(x, ChristmasDays)
x
dplyr::setdiff(x, ChristmasDays)
dplyr::setdiff(x, ChristmasDays)
ChristmasDays
view(x)
View(x)
View(ChristmasDays)
setdiff(x, ChristmasDays)
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)
debugSource('/datascience/projects/trading/misc/quantmod1.R')
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x))) %>%
select(-x)
xdf
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)
as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf
as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf
xdf %>% filter(xdf not %in% Holidays)
xdf %>% filter(xdf %in% Holidays)
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf
xdf %>% filter(xdf %in% Holidays)
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
d1 <- data_frame(
x = letters[1:3],
y = LETTERS[1:3],
a = rnorm(3)
)
d1
d2 <- data_frame(
x2 = letters[3:1],
y2 = LETTERS[3:1],
b = rnorm(3)
)
d2
left_join(d1, d2, by = c("x" = "x2", "y" = "y2"))
letters[1:3]
d2 <- data_frame(
x2 = letters[4:2],
y2 = LETTERS[4:2],
b = rnorm(3)
)
left_join(d1, d2, by = c("x" = "x2", "y" = "y2"))
inner_join(d1, d2, by = c("x" = "x2", "y" = "y2"))
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
inner_join(xdf, Holidays, c("year" = "year", "month" = "month", "day" = "day"))
xdf
setdiff(xdf, Holidays, c("year" = "year", "month" = "month", "day" = "day"))
xdf
join(xdf, Holidays, c("year" = "year", "month" = "month", "day" = "day"))
join(xdf, Holidays, c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, c("year" = "year", "month" = "month", "day" = "day"))
inner_join(xdf, Holidays, c("year" = "year", "month" = "month", "day" = "day"))
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf
inner_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
anti_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
inner_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
inner_join(d1, d2, by = c("x" = "x2", "y" = "y2"))
left_join(d1, d2, by = c("x" = "x2", "y" = "y2"))
Holidays %>% mutate(isHoliday = TRUE)
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)), isHoliday = FALSE)
xdf
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
inner_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
x
as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)), isHoliday = FALSE)
d1 <- data_frame(
x = letters[1:3],
y = LETTERS[1:3],
a = rnorm(3)
)
d1
d2
left_join(d1, d2, by = c("x" = "x2", "y" = "y2"))
Holidays
xdf
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf
inner_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
Holidays = Holidays %>% mutate(isHoliday = TRUE)
Holidays
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday)
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31)
unlist(left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday)
class(left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))
as.vector((left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday)))
(left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))[,2]
(left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))[,1]
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% collect %>% .[[Holidays]]
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% collect %>% .[["Holidays"]]
(left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))[,1]
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31) |
xdf
xdf <- (left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))[,1]
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31) |
xdf
?left_join
isHoliday <- (left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))[,1]
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
isHoliday <- (left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))[,1]
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31) |
isHoliday
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)), isHoliday = FALSE)
isHoliday <- (left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))[,1]
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
isHoliday <- (left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))[,1]
(month(x) ==  1) & (day(x) ==  1) |
(month(x) == 12) & (day(x) == 25 | day(x) == 26 | day(x) == 31) |
isHoliday
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% .$isHoliday
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
(left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% select(isHoliday))[,1]
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% .$isHoliday
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>%
mutate(isHoliday = ifelse(is.na('isHoliday'), FALSE, isHoliday)) %>%
.$isHoliday
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>%
mutate(isHoliday2 = ifelse(is.na('isHoliday'), FALSE, isHoliday)) %>%
.$isHoliday2
xdf <- as.data.frame(x) %>%
mutate(year = year(x), month = month(x), day = as.numeric(day(x)))
xdf
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>%
mutate(isHoliday2 = ifelse(is.na('isHoliday'), FALSE, isHoliday))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>%
mutate(isHoliday2 = ifelse(is.na('isHoliday') == TRUE, FALSE, isHoliday))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>%
mutate(isHoliday2 = TRUE)
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>%
mutate(isHoliday2 = ifelse(is.na('isHoliday') == TRUE, FALSE, isHoliday)) %>%
.$isHoliday2
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
isHoliday <- left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
isHoliday
mutate(isHoliday2 = ifelse(is.na('isHoliday') == TRUE, FALSE, isHoliday)) %>% .$isHoliday2
mutate(isHoliday, isHoliday2 = ifelse(is.na('isHoliday') == TRUE, FALSE, isHoliday)) %>% .$isHoliday2
transform(isHoliday, isHoliday2 = ifelse(is.na('isHoliday'), FALSE, isHoliday)) %>% .$isHoliday2
isHoliday <- left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% .$isHoliday
isHoliday
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% .$isHoliday
transform(isHoliday, isHoliday2 = ifelse(is.na('isHoliday'), FALSE, isHoliday))
isHoliday <- left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day"))
transform(isHoliday, isHoliday2 = ifelse(is.na('isHoliday'), FALSE, isHoliday))
isHoliday <- left_join(xdf, Holidays, by = c("year" = "year", "month" = "month", "day" = "day")) %>% .$isHoliday
debugSource('/datascience/projects/trading/misc/quantmod1.R')
printStats(symbol, TRUE)
debugSource('/datascience/projects/trading/misc/quantmod1.R')
debugSource('/datascience/projects/trading/misc/quantmod1.R')
daysDiff %>%
transmute(date = as.POSIXct(daysDiff$date, tz='GMT', origin="1970-01-01")) %>%
mutate(wday = wday(date)) %>%
mutate(isHoliday = isHoliday(date))
debugSource('/datascience/projects/trading/misc/quantmod1.R')
daysDiff %>%
transmute(date = as.POSIXct(daysDiff$date, tz='GMT', origin="1970-01-01")) %>%
mutate(wday = wday(date)) %>%
mutate(isHoliday = isHoliday(date))
debugSource('/datascience/projects/trading/misc/quantmod1.R')
daysDiff %>%
transmute(date = as.POSIXct(daysDiff$date, tz='GMT', origin="1970-01-01")) %>%
mutate(wday = wday(date)) %>%
mutate(isHoliday = isHoliday(date))
debugSource('/datascience/projects/trading/misc/quantmod1.R')
daysDiff %>%
transmute(date = as.POSIXct(daysDiff$date, tz='GMT', origin="1970-01-01")) %>%
mutate(wday = wday(date)) %>%
mutate(isHoliday = isHoliday(date))
daysDiff %>%
transmute(date = as.POSIXct(daysDiff$date, tz='GMT', origin="1970-01-01")) %>%
mutate(wday = wday(date)) %>%
mutate(isHoliday = isHoliday(date))
