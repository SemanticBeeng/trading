install.packages('urca')
install.packages('forecast')
set.seed(123456)
y <- arima.sim(n = 100, list(ar = 0.9), innov=rnorm(100))
op <- par(no.readonly=TRUE)
layout(matrix(c(1, 1, 2, 3), 2, 2, byrow=TRUE))
plot.ts(y, ylab='')
acf(y, main='Autocorrelations', ylab='',
ylim=c(-1, 1), ci.col = "black")
pacf(y, main='Partial Autocorrelations', ylab='',
ylim=c(-1, 1), ci.col = "black")
par(op)
?par
series <-  rnorm(1000)
y.st <- filter(series, filter=c(0.6, -0.28),
method='recursive')
ar2.st <- arima(y.st, c(2, 0, 0), include.mean=FALSE,
transform.pars=FALSE, method="ML")
ar2.st$coef
?filter
ar2.st$coef
polyroot(c(1, -ar2.st$coef))
Mod(polyroot(c(1, -ar2.st$coef)))
plot(series)
plot(y.st)
polyroot(c(1, -ar2.st$coef))
rnorm(1000
series <-  rnorm(1000)
plot(series)
y.st <- filter(series, filter=c(0.6, -0.28),
method='recursive')
plot(y.st)
ar2.st <- arima(y.st, c(2, 0, 0), include.mean=FALSE,
transform.pars=FALSE, method="ML")
ar2.st$coef
?polyroot
polyroot(c(1, -ar2.st$coef))
Mod(polyroot(c(1, -ar2.st$coef)))
polyroot(c(1, -ar2.st$coef))
x <- seq(-1, 1, length = 1000)
y1 <- sqrt(1- x^2)
y2 <- -sqrt(1- x^2)
plot(c(x, x), c(y1, y2), xlab='Real part',
ylab='Complex part', type='l',
main='Unit Circle', ylim=c(-2, 2), xlim=c(-2, 2))
abline(h=0)
abline(v=0)
points(Re(polyroot(c(1, -ar2.st$coef))),
Im(polyroot(c(1, -ar2.st$coef))), pch=19)
legend(-1.5, -1.5, legend="Roots of AR(2)", pch=19)
library(urca)
data(npext)
y <- ts(na.omit(npext$unemploy), start=1909, end=1988, frequency=1)
npext$unemploy
y <- ts(na.omit(npext$unemploy), start=1909, end=1988, frequency=1)
op <- par(no.readonly=TRUE)
layout(matrix(c(1, 1, 2, 3), 2, 2, byrow=TRUE))
plot(y, ylab="unemployment rate (logarithm)")
acf(y, main='Autocorrelations', ylab='', ylim=c(-1, 1))
pacf(y, main='Partial Autocorrelations', ylab='', ylim=c(-1, 1))
par(op)
?par
arma20 <- arima(y, order=c(2, 0, 0))
# estimated AR coefficients, log likelyhood, residuals and aic
arma20$coef['ar1']
arma20$coef['ar2']
arma20$loglik
arma20$residuals
ll20 <- logLik(arma20)
aic20 <- arma20$aic
res20 <- residuals(arma20)
plot(res20, ylab="arma20 residuals")
# Test the assumption of correlatedness
Box.test(res20, lag = 20, type =  "Ljung-Box")
acf(y, main='Autocorrelations', ylab='', ylim=c(-1, 1))
pacf(y, main='Partial Autocorrelations', ylab='', ylim=c(-1, 1))
acf(y, main='Autocorrelations', ylab='', ylim=c(-1, 1))
pacf(y, main='Partial Autocorrelations', ylab='', ylim=c(-1, 1))
Box.test(res20, lag = 20, type =  "Ljung-Box")
Box.test(res20, lag = 20, type =  "Ljung-Box")
# Test hypothesis of normally distributed errors
shapiro.test(res20)
ll30
arma30 <- arima(y, order=c(3, 0, 0))
ll30 <- logLik(arma30)
aic30 <- arma30$aic
ll30
ll20
ll30 - lll20
ll30 - ll20
as.numeric(2*(ll30 - ll20))
lrtest <- as.numeric(2*(ll30 - ll20))
chi.pval <- pchisq(lrtest, df = 1, lower.tail = FALSE)
## ARMA(1,1)
arma11 <- arima(y, order = c(1, 0, 1))
ll11 <- logLik(arma11)
aic11 <- arma11$aic
tsdiag(arma11)
tsdiag(arma11)
res11 <- residuals(arma11)
Box.test(res11, lag = 20, type =  "Ljung-Box")
shapiro.test(res11)
tsdiag(arma11)
## Using auto.arima()
library(forecast)
auto.arima(y, max.p = 3, max.q = 3, start.p = 1, start.q = 1, ic = "aic")
